generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
    directUrl = env("DIRECT_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@index([userId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum Role {
  OWNER
  ADMIN
  USER
}

model User {
    id            String    @id @default(cuid())
    firstName     String?
    lastName      String?
    email         String   
    emailVerified DateTime?
    accounts      Account[]
    sessions      Session[]

    membership    Membership?
}

model Team {
    id          String  @id @default(cuid())
    name        String
    member      Membership[]
    size        Int
}

model Membership {
    id          String @id @default(cuid())
    user        User   @relation(fields: [userId], references: [id]) 
    userId      String @unique
    role        Role   @default(OWNER)

    team        Team   @relation(fields: [teamId], references: [id])
    teamId      String @unique
}
